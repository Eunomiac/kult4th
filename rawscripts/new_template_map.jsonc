{
	"Actor": {
		"types": [
			"PC",
			"NPC"
		],
		"PC": {
			"archetype": "",
			"description": "",
			"history": "",
			"dramaticHooks": [
				{
					"value": "",
					"isChecked": false
				},
				{
					"value": "",
					"isChecked": false
				}
			],
			"attributes": {
				"willpower": {
					"min": -5,
					"max": 7,
					"value": 0
				},
				"fortitude": {
					"min": -5,
					"max": 7,
					"value": 0
				},
				"reflexes": {
					"min": -5,
					"max": 7,
					"value": 0
				},
				"reason": {
					"min": -5,
					"max": 7,
					"value": 0
				},
				"perception": {
					"min": -5,
					"max": 7,
					"value": 0
				},
				"coolness": {
					"min": -5,
					"max": 7,
					"value": 0
				},
				"violence": {
					"min": -5,
					"max": 7,
					"value": 0
				},
				"charisma": {
					"min": -5,
					"max": 7,
					"value": 0
				},
				"soul": {
					"min": -5,
					"max": 7,
					"value": 0
				}
			},
			"wounds": [],
			"stability": {
				"min": 0,
				"max": 9,
				"value": 0
			},
			"edges": {
				"sourceName": "",
				"value": 0
			}
		},
		"NPC": {}
	},
	"Item": {
		"types": [
			"move",
			"attack",
			"advantage",
			"disadvantage",
			"darksecret",
			"weapon",
			"relation",
			"gear"
		],
		"move": {
			"intro": "iData.effect.intro",
			"trigger": "iData.effect.trigger",
			"outro": "iData.effect.effect",
			"attribute": "iData.attributemod",
			"notes": "",
			"passiveEffect": {
				"optionsLists": [], // iData.results.suffix.list !== "" ? ["watchers gang"] : []
				"suffix": "", // !iData.suffix.text.match(/Hold/) ? iData.suffix.text : ""
				"hold": 0
			},
			"completeSuccess": {
				"result": "iData.results.success.text",
				"optionsLists": [], /* [
					(iData.results.lists.questions !== ""
						&& iData.results.success.text.match(/sk\s+[a-z]+\s+question/))
						? "questions"
						: null,
					(iData.results.lists.options !== ""
						&& iData.results.success.text.match(/hoose\s+[a-z]+\s+option/))
						? "options"
						: null,
					(iData.results.lists.edges !== ""
						&& iData.results.success.text.match(/\d+\s+Edge/))
						? "edges"
						: null
				].filter(Boolean) */
				"edges": 0, // parseInt((iData.results.success.text.match(/^Gain (\d+) Edge/) ?? [])[1] || 0)
				"hold": 0 // parseInt((iData.results.success.text.match(/(\d+) Hold/) ?? [])[1] || 0)
			},
			"partialSuccess": {
				"result": "iData.results.partial.text",
				"optionsLists": [], /* [
					(iData.results.lists.questions !== ""
						&& iData.results.partial.text.match(/sk\s+[a-z]+\s+question/))
						? "questions"
						: null,
					(iData.results.lists.options !== ""
						&& iData.results.partial.text.match(/hoose\s+[a-z]+\s+option/))
						? "options"
						: null,
					(iData.results.lists.edges !== ""
						&& iData.results.partial.text.match(/\d+\s+Edge/))
						? "edges"
						: null
				].filter(Boolean) */
				"edges": 0, // parseInt((iData.results.partial.text.match(/^Gain (\d+) Edge/) ?? [])[1] || 0)
				"hold": 0 // parseInt((iData.results.partial.text.match(/(\d+) Hold/) ?? [])[1] || 0)
			},
			"failure": {
				"result": "iData.results.fail.text",
				"optionsLists": [], /* [
					(iData.results.lists.questions !== ""
						&& iData.results.fail.text.match(/sk\s+[a-z]+\s+question/))
						? "questions"
						: null,
					(iData.results.lists.options !== ""
						&& iData.results.fail.text.match(/hoose\s+[a-z]+\s+option/))
						? "options"
						: null,
					(iData.results.lists.edges !== ""
						&& iData.results.fail.text.match(/\d+\s+Edge/))
						? "edges"
						: null
				].filter(Boolean) */
				"edges": 0, // parseInt((iData.results.fail.text.match(/^Gain (\d+) Edge/) ?? [])[1] || 0)
				"hold": 0 // parseInt((iData.results.fail.text.match(/(\d+) Hold/) ?? [])[1] || 0)
			},
			"lists": {
				"questions": [], // iData.results.lists.questions.split(/\|/).filter(Boolean)
				"options": [], // iData.results.lists.options.split(/\|/).filter(Boolean)
				"edges": [] // iData.results.lists.edges.split(/\|/).filter(Boolean)
				/* if (iData.results.suffix.list !== "") {
					"watchers gang": iData.results.suffix.list.split(/\|/).filter(Boolean)
				} */
			},
			"sourceItem": {
				"id": "", // (filled in when item is embedded in actor sheet)
				"type": "", // iData.linkType
				"name": "" // iData.linkName
			}, // OR false, if this is a basic move
			"isCustom": true, // set to FALSE for ALL auto-created moves
			"isActive": true, // iData.type === "active"
			"canGrantHold": false, // iData.hasHolds
			"holdText": "", // iData.suffix.text.match(/Hold/) ? iData.suffix.text : ""
			"pdfLink": ""
		},
		"attack": {
			"distance": "arm",
			"baseHarm": 0,
			"effect": "",
			"details": "",
			"ammo": 0,
			"sourceItem": {
				"id": "", // (filled in when item is embedded in actor sheet)
				"type": "", // iData.linkType
				"name": "" // iData.linkName
			},
			"isCustom": true,
			"pdfLink": ""
		},
		"weapon": {
			"exampleTypes": "",
			"weaponType": "",
			"details": "",
			"ammo": {
				"min": 0,
				"max": 0,
				"value": 0
			},
			"linkedItemData": [],
			"isCustom": true,
			"pdfLink": ""
		},
		"advantage": {
			"description": "",
			"attribute": "",
			"details": "",
			"linkedItemData": [],
			"isCustom": true,
			"pdfLink": ""
		},
		"disadvantage": {
			"description": "",
			"notes": "",
			"linkedItemData": [],
			"currentHold": 0,
			"isCustom": true,
			"pdfLink": ""
		},
		"darksecret": {
			"description": "",
			"suggestedDrives": [],
			"drive": "",
			"details": "",
			"playerNotes": "",
			"gmNotes": ""
		},
		"relation": {
			"target": "",
			"description": "",
			"details": "",
			"strength": {
				"min": 0,
				"max": 2,
				"value": 0
			}
		},
		"gear": {}
	}
}